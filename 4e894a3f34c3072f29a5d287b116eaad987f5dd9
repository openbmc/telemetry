{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b435d07d_ab0ebc3d",
        "filename": "src/report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T10:33:53Z",
      "side": 1,
      "message": "Just sort them no matter the size, effect will be the same.",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 58,
        "endChar": 5
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b51e452e_ebcb1561",
        "filename": "src/report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2022-01-31T12:15:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b435d07d_ab0ebc3d",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 58,
        "endChar": 5
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaa97148_a1fae6b8",
        "filename": "src/report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T10:33:53Z",
      "side": 1,
      "message": "No need for this check",
      "range": {
        "startLine": 270,
        "startChar": 12,
        "endLine": 270,
        "endChar": 31
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e746029_160dd7a9",
        "filename": "src/report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2022-01-31T12:15:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaa97148_a1fae6b8",
      "range": {
        "startLine": 270,
        "startChar": 12,
        "endLine": 270,
        "endChar": 31
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a622bd7a_2ce8530c",
        "filename": "src/report_factory.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T10:33:53Z",
      "side": 1,
      "message": "Do we need this?",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efba9b3e_ba35e231",
        "filename": "src/report_factory.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2022-01-31T12:15:23Z",
      "side": 1,
      "message": "Yes, it is required due to during POST, PUT or PATCH done for reports user can provide an empty array of metric parameters and this optimization makes the conversion faster.",
      "parentUuid": "a622bd7a_2ce8530c",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e6ab39f_82167262",
        "filename": "src/report_factory.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-02-03T12:10:45Z",
      "side": 1,
      "message": "I don\u0027t expect this to be critical path. Since code should work the same with empty metricParams I think we can safety remove this check.",
      "parentUuid": "efba9b3e_ba35e231",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57601c26_8e571486",
        "filename": "tests/src/test_report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T10:33:53Z",
      "side": 1,
      "message": "you can replace call to initMetricMocks with:\nmetricMocks \u003d getMetricMocks(metricParameters)",
      "range": {
        "startLine": 48,
        "startChar": 9,
        "endLine": 48,
        "endChar": 24
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "954e8b1d_16371273",
        "filename": "tests/src/test_report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2022-01-31T12:15:23Z",
      "side": 1,
      "message": "I have reduced two handlers of \u0027getMetricMocks\u0027 and \u0027getMetricsFromReadingParams\u0027 into single helper routine of \u0027getMetricsFromReadingParams\u0027 due to it better fits the need of extracting and setup metrics used within UT test of ReadingParametersFutureVersion interface.\nPointed issue does not exist anymore so closing this remark.",
      "parentUuid": "57601c26_8e571486",
      "range": {
        "startLine": 48,
        "startChar": 9,
        "endLine": 48,
        "endChar": 24
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "979b36a0_0ef46e4b",
        "filename": "tests/src/test_report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T10:33:53Z",
      "side": 1,
      "message": "nit: consider creating helper, expectSuccesulSetProperty",
      "range": {
        "startLine": 225,
        "startChar": 0,
        "endLine": 231,
        "endChar": 31
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3911d30b_cc062e9e",
        "filename": "tests/src/test_report.cpp",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2022-01-31T12:15:23Z",
      "side": 1,
      "message": "I would vote to keep it as it is right now, current version aligns well to the rest of the UT tests here which verify report interfaces via both setter and getter.\nClosing this point, as this is \u0027nit\u0027 suggestion, if you have any objection here then please feel free to reopen.",
      "parentUuid": "979b36a0_0ef46e4b",
      "range": {
        "startLine": 225,
        "startChar": 0,
        "endLine": 231,
        "endChar": 31
      },
      "revId": "4e894a3f34c3072f29a5d287b116eaad987f5dd9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}