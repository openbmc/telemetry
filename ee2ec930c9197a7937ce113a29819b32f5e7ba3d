{
  "comments": [
    {
      "key": {
        "uuid": "5162dd9e_731d0440",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-07-30T15:59:48Z",
      "side": 1,
      "message": "IMO the commit message is too vast, I am not sure if this is actually a problem but maybe you could make it more compact keeping the most important info?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f07b7345_ad87342c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T15:21:38Z",
      "side": 1,
      "message": "I agree that this might look a bit too long, but I tried to describe all modifications done in this change. Honestly, except for dbus examples, I have no idea how to make it shorter.",
      "parentUuid": "5162dd9e_731d0440",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "371326bb_103d75a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-08-03T13:57:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f07b7345_ad87342c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97e450ac_3284f411",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-07-30T15:51:36Z",
      "side": 1,
      "message": "Is it possible to use here \"RedfishMetricReport\" instead?\nThen it will fit 1:1 to #/definitions/TriggerActionEnum from Triggers schema and additional mapping in bmcweb will not be needed.",
      "range": {
        "startLine": 26,
        "startChar": 23,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d3c06f9_8371edf2",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T15:21:38Z",
      "side": 1,
      "message": "Not all telemetry clients need to use redfish/bmcweb as an interface. This action does not require redfish and \u0027UpdateReport\u0027 sounds more generic for me. This can be converted to proper string on bmcweb side.\n\nThe other solution would be to handle both names on telemetry side as aliases (UpdateReport and RedfishMetricReport) but this could be difficult to document in dbus interfaces.",
      "parentUuid": "97e450ac_3284f411",
      "range": {
        "startLine": 26,
        "startChar": 23,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76a623d4_de0e3812",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-08-03T13:57:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9d3c06f9_8371edf2",
      "range": {
        "startLine": 26,
        "startChar": 23,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6c5ba4e_5314b98c",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-07-30T15:51:36Z",
      "side": 1,
      "message": "Function seems not to be used, and if so this is a dead code. I would vote for lazy programming approach - do not write a code until it is actually needed.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05785c18_5629d972",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T15:21:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6c5ba4e_5314b98c",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea3c433d_b7c74dc2",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-07-30T15:51:36Z",
      "side": 1,
      "message": "I suggest to use std::holds_alternative in the wrapper instead. Bool is directly returned there.",
      "range": {
        "startLine": 163,
        "startChar": 11,
        "endLine": 163,
        "endChar": 22
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e7e513a_b650488d",
        "filename": "src/interfaces/trigger_types.hpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T15:21:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea3c433d_b7c74dc2",
      "range": {
        "startLine": 163,
        "startChar": 11,
        "endLine": 163,
        "endChar": 22
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b54ee10_ed4321b0",
        "filename": "src/trigger_actions.cpp",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-07-30T15:51:36Z",
      "side": 1,
      "message": "What is your position regarding default clause in switch {} case {} construct? I would vote to add \u0027default\u0027 even if only defined cases occur, due to conformance with good coding guidelines.",
      "range": {
        "startLine": 126,
        "startChar": 12,
        "endLine": 126,
        "endChar": 13
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f605425_6317abd7",
        "filename": "src/trigger_actions.cpp",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T15:21:38Z",
      "side": 1,
      "message": "Our compiler is set to detect any missing case as an error - by not including default case, we have additional compile-time protection if developer won\u0027t handle newly added action.",
      "parentUuid": "8b54ee10_ed4321b0",
      "range": {
        "startLine": 126,
        "startChar": 12,
        "endLine": 126,
        "endChar": 13
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5254e943_2f447742",
        "filename": "src/trigger_actions.cpp",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-08-03T13:57:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5f605425_6317abd7",
      "range": {
        "startLine": 126,
        "startChar": 12,
        "endLine": 126,
        "endChar": 13
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4393f61_0bacef25",
        "filename": "tests/src/params/trigger_params.hpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-07-30T15:51:36Z",
      "side": 1,
      "message": "triggerActionsProperty not initialized by substantial values so the vector will be empty. Maybe it would be good to add at least one action to have more variety in this variable and better base for tests to check.",
      "range": {
        "startLine": 58,
        "startChar": 29,
        "endLine": 58,
        "endChar": 51
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0b14c7_d49071dc",
        "filename": "tests/src/params/trigger_params.hpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T15:21:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4393f61_0bacef25",
      "range": {
        "startLine": 58,
        "startChar": 29,
        "endLine": 58,
        "endChar": 51
      },
      "revId": "ee2ec930c9197a7937ce113a29819b32f5e7ba3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}