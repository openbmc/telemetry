{
  "comments": [
    {
      "key": {
        "uuid": "8354898f_56364558",
        "filename": "src/metric.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-10-13T09:43:32Z",
      "side": 1,
      "message": "I know that you have just removed \u0027enabled\u0027 field from this class, but I think that it could have some usage here. This way you could check the field without calling looping over each sensor and calling unregister and register.",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 19
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2d13619_81e4a8a5",
        "filename": "src/metric.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-10-14T13:00:22Z",
      "side": 1,
      "message": "There can be two possible approaches.\n\nFirst, we can make sure that metric::initialize is not called on already initialized metric. Report is aware of enabled status and can call proper method. We will unit test it and won\u0027t allow it to happen in code.\n\nSecond, make initialize and deinitialize private. Change sensor::registerForUpdates to prevent adding already registered listener. \n\nFirst approach will keep whole logic enabled feature in report class we will avoid any unnecessary operations.\nSecond approach will be bulletproof but each registerForUpdates will have additional overhead.",
      "parentUuid": "8354898f_56364558",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 19
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ddeb05_d543a60d",
        "filename": "src/metric.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "As discussed - first approach from Krzysztofs suggestions in use.",
      "parentUuid": "a2d13619_81e4a8a5",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 19
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e55cdab_ae6f4570",
        "filename": "src/metric.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-10-13T09:43:32Z",
      "side": 1,
      "message": "Same as above, if you kept \u0027enabled\u0027, you could just check if enabled !\u003d state, without unnecessary calls.",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 5
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86bc1e1a_1e688990",
        "filename": "src/metric.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "Another approach prevails, this function is entirely removed.",
      "parentUuid": "5e55cdab_ae6f4570",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 5
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf5a45ea_c5e842eb",
        "filename": "src/report.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-10-14T13:00:22Z",
      "side": 1,
      "message": "What if enabled is set to false when creating report? It seem possible when we are creating report from configuration file.",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 29
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3182150_e0e24f15",
        "filename": "src/report.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf5a45ea_c5e842eb",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 29
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84327a6d_8ad67197",
        "filename": "src/report.cpp",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-10-14T13:00:22Z",
      "side": 1,
      "message": "nit: if (!enabled) {\n  return;\n}\n\nit will reduce code indentation and improve formatting",
      "range": {
        "startLine": 185,
        "startChar": 4,
        "endLine": 185,
        "endChar": 16
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "920e3dcc_c4dd192e",
        "filename": "src/report.cpp",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84327a6d_8ad67197",
      "range": {
        "startLine": 185,
        "startChar": 4,
        "endLine": 185,
        "endChar": 16
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "082fcd6e_3354b72d",
        "filename": "src/report.hpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-10-13T09:43:32Z",
      "side": 1,
      "message": "this could be const",
      "range": {
        "startLine": 27,
        "startChar": 11,
        "endLine": 27,
        "endChar": 16
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1d7af13_1b6f3f94",
        "filename": "src/report.hpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "082fcd6e_3354b72d",
      "range": {
        "startLine": 27,
        "startChar": 11,
        "endLine": 27,
        "endChar": 16
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9111a8f6_75398f5f",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-10-13T09:43:32Z",
      "side": 1,
      "message": "nit: enabledDefault?",
      "range": {
        "startLine": 59,
        "startChar": 35,
        "endLine": 59,
        "endChar": 43
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e120c73_08feaa77",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9111a8f6_75398f5f",
      "range": {
        "startLine": 59,
        "startChar": 35,
        "endLine": 59,
        "endChar": 43
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cc89b28_6bfd6ade",
        "filename": "src/report_manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-10-13T09:43:32Z",
      "side": 1,
      "message": "this could be const",
      "range": {
        "startLine": 52,
        "startChar": 66,
        "endLine": 52,
        "endChar": 71
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1623bb0_07722849",
        "filename": "src/report_manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-10-14T13:00:22Z",
      "side": 1,
      "message": "nit: I would prefer removing const from other parameters which doesn\u0027t need that instead of adding const to parameter passed by copy.\n\nIt\u0027s rare to see that function parameters are const.",
      "parentUuid": "6cc89b28_6bfd6ade",
      "range": {
        "startLine": 52,
        "startChar": 66,
        "endLine": 52,
        "endChar": 71
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c62d536d_00c24878",
        "filename": "src/report_manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "As discussed, we will keep \u0027const\u0027 basic types passed by value.",
      "parentUuid": "f1623bb0_07722849",
      "range": {
        "startLine": 52,
        "startChar": 66,
        "endLine": 52,
        "endChar": 71
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d1ea33_a2bf67b4",
        "filename": "tests/src/test_sensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-10-14T13:00:22Z",
      "side": 1,
      "message": "Why? DbusEnvironment::sleepFor is executing events while sleeping, with this if you wont execute any events already in queue. It also looks like dead code, one sleep you are using uses 100ms as parameter",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 115,
        "endChar": 28
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d61eccae_89f1fa68",
        "filename": "tests/src/test_sensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-10-18T15:55:38Z",
      "side": 1,
      "message": "Approach is changed, this helper function occurred not to be needed here.",
      "parentUuid": "53d1ea33_a2bf67b4",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 115,
        "endChar": 28
      },
      "revId": "329b193376dae0ae336ec3367f2033cacae7fdb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}