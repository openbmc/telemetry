{
  "comments": [
    {
      "key": {
        "uuid": "f77a97e8_cef21f19",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-17T09:10:13Z",
      "side": 1,
      "message": "const auto\u0026 ?",
      "range": {
        "startLine": 59,
        "startChar": 16,
        "endLine": 59,
        "endChar": 26
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c73d065c_ee6d70ba",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-08-18T13:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f77a97e8_cef21f19",
      "range": {
        "startLine": 59,
        "startChar": 16,
        "endLine": 59,
        "endChar": 26
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4edc1e2_20d42998",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-17T09:10:13Z",
      "side": 1,
      "message": "Move these to metric.hpp L: 17?",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 28
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99cd937c_fb5679fe",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-08-18T13:04:41Z",
      "side": 1,
      "message": "It\u0027s here on purpose. Metric::Collection data is only defined in cpp file as a implementation detail. That\u0027s why destructor need to be defined here. Compiler won\u0027t know how to delete Metric::Collection outside of this translation unit.",
      "parentUuid": "d4edc1e2_20d42998",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 28
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52c524ba_76feea90",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-19T04:48:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "99cd937c_fb5679fe",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 28
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16d883d5_28700e3a",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-17T09:10:13Z",
      "side": 1,
      "message": "add try-catch ?",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 154,
        "endChar": 55
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b6a7908_7ebcc9e9",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-08-18T13:04:41Z",
      "side": 1,
      "message": "Why? I don\u0027t see any possible throw inside.",
      "parentUuid": "16d883d5_28700e3a",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 154,
        "endChar": 55
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8629f17e_e80f7808",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-19T04:48:50Z",
      "side": 1,
      "message": "if resultReadings.size() \u003d\u003d 10 and collectionAlgorithms.size() \u003c 10\nI think collectionAlgorithms[i] will overflow, Correct?\n\nIn any case, it is a good habit to add `try-catch` when we operate the array.",
      "parentUuid": "2b6a7908_7ebcc9e9",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 154,
        "endChar": 55
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94e26983_3d041014",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 154,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-08-24T08:27:07Z",
      "side": 1,
      "message": "Both arrays have same size. resultReadings is a copy of readings with updated timestamp. Both readings and collectionAlgorithms have same (sensors.size()) there is no way to overflow.\n\nLet\u0027s consider we can try-catch here.\n- We won\u0027t get error code on dbus, error will be silently discarded. \n- If something is thrown it will be silently handled somehow, but all we can do is silently discard it. Unit tests won\u0027t fail and CI won\u0027t detect this error.\n\nIf we keep this throw with our current test coverage if something is wrong here CI won\u0027t allow this change to be merged. Also other tools that are run on CI are able to detect potential memory issues here. If you want we can change [] to .at that should change potential crash or valgrind error to failed test due to uncatched exception.\n\nPlease take a look at TEST_P(TestMetricCalculationFunctions, calculatesReadingValue), Metric constructor and this code. There is no way that any exception is thrown here we have it covered in unit tests.\n\nIf we catch this exception here how are we supposed to test it?",
      "parentUuid": "8629f17e_e80f7808",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 154,
        "endChar": 55
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f20741c_3c2fbeb5",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 177,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-17T09:10:13Z",
      "side": 1,
      "message": "What happens if index \u003e collectionAlgorithms.size()?\n\nI think we can add try-catch ?",
      "range": {
        "startLine": 177,
        "startChar": 11,
        "endLine": 177,
        "endChar": 42
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca0f6e1c_2b7123fd",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 177,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-08-18T13:04:41Z",
      "side": 1,
      "message": "This exception should never happen, if it happens we need to detect it as fast as possible and fix it. If this throws we can consider whole telemetry not working, there is no recovery from it. That\u0027s why there is no catch.\n\nThere is bunch of unit tests that cover this case, if something is not right here CI will detect it.",
      "parentUuid": "4f20741c_3c2fbeb5",
      "range": {
        "startLine": 177,
        "startChar": 11,
        "endLine": 177,
        "endChar": 42
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f6d3a18_9a965ddd",
        "filename": "src/metric.cpp",
        "patchSetId": 14
      },
      "lineNbr": 177,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-19T04:48:50Z",
      "side": 1,
      "message": "as above",
      "parentUuid": "ca0f6e1c_2b7123fd",
      "range": {
        "startLine": 177,
        "startChar": 11,
        "endLine": 177,
        "endChar": 42
      },
      "revId": "4761fce99421bc5971f27dc7fd261854efd849c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}