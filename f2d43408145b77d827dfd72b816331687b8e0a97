{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "63942eef_75449599",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-21T11:21:03Z",
      "side": 1,
      "message": "Please follow the rule 50/72 for commit message, also please avoid breaking the lines by hand",
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42196dd3_cc688705",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-25T19:04:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63942eef_75449599",
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07dd0323_0ab73aae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-21T11:49:46Z",
      "side": 1,
      "message": "Let\u0027s consider a situation that on some machines there are sensors with very long name considering browser limitations and how redfish resources are named max resource name will be around 2000 length (old IE has limit to 2084 characters). So that would mean that EventService can handle only around 32 MetricProperties in single report. If user decides to create also long metricReport name it would be less than 30 metric properties in single report. It\u0027s very unlikely, but it looks like security hole in event service. Maybe I am overthinking, but it might be worth checking with bmcweb maintainers.",
      "range": {
        "startLine": 12,
        "startChar": 29,
        "endLine": 12,
        "endChar": 36
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52d7e527_51f076c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-01-21T11:31:04Z",
      "side": 1,
      "message": "As Krzysztof said, this functionality should have unit tests, and information if all unit tests are passing should be \u0027Tested\u0027 section of commit message.",
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c44b983_7791fb07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-25T19:04:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52d7e527_51f076c4",
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "647ad350_76ed8834",
        "filename": "meson_options.txt",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-21T11:21:03Z",
      "side": 1,
      "message": "use max-reading-parameters instead, which was supposed to be limiting readings parameters exactly like max-number-metrics is limiting them in this patchset",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d683c539_cfade94b",
        "filename": "meson_options.txt",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-25T19:04:53Z",
      "side": 1,
      "message": "We are already using max-reading-parameters to limit number of metric parameters which is already being implemented.\nThis limit (max-number-metrics) is introduced to have a cap on number of metric properties (URI\u0027s) provided.\nExample: \n{\nID: \"MyMetric1\",\nMetricProperties: [\n\"/example1/test\",\n\"/example2/test\"\n]\n}\n{\nID: \"MyMetric2\",\nMetricProperties: [\n\"/example1/test\",\n\"/example2/test\"\n]\n}\n\nSo here we have 2 Metric Parameters (MyMetric1 and MyMetric2)\nand 4 Metric parameters.\n\nAm i missing something here ?",
      "parentUuid": "647ad350_76ed8834",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "281483a6_b788cd7d",
        "filename": "meson_options.txt",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T08:18:42Z",
      "side": 1,
      "message": "Your understanding is correct. It just that new limit will also prevent user from adding max-reading-parameters up to limit. Because if we consider that each Metric will have 1 MetricProperty then it is possible to create 150 metrics, or less if other Metric have more MetricProperties.\n\nSince this two limits overlaps each other it would make sense to merge them into one. I suggest to keep max-number-metrics since it is more precise and remove max-reading-parameters.",
      "parentUuid": "d683c539_cfade94b",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cea1caa_8a9b28f1",
        "filename": "meson_options.txt",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-27T11:14:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "281483a6_b788cd7d",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46488ece_71d6d50b",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-21T11:21:03Z",
      "side": 1,
      "message": "use at_label\u003cutils::tstring::MetricProperties\u003e like in line 183 to increase readability",
      "range": {
        "startLine": 164,
        "startChar": 43,
        "endLine": 164,
        "endChar": 51
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f25a37_ac986e54",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-25T19:04:53Z",
      "side": 1,
      "message": "I think the parameter that i am trying to access wouldn\u0027t be accessible by using at_label\u003c\u003e().\n\nThe structure LabeledTuple has two sections, i.e. Args and Lables, where the Args part is a tuple.\nIn our case, we would need to access std::vector\u003cLabeledSensorParameters\u003e which would be the Args part of LabeledMetricParameters.\nand i see that, this section is accessible only via at_index\u003c\u003e().",
      "parentUuid": "46488ece_71d6d50b",
      "range": {
        "startLine": 164,
        "startChar": 43,
        "endLine": 164,
        "endChar": 51
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9903d5a2_f2d93b6d",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-26T08:18:42Z",
      "side": 1,
      "message": "at_label and at_index both access value inside the tuple.\nat_index was designed to covertion to tuple like:\nstd::get\u003c0\u003e(tuple) \u003d labeledTuple.at_index\u003c0\u003e()\n\nat_label was designed to used where order dosn\u0027t matter, trust me it will work. Your new unit test will confirm it.",
      "parentUuid": "a0f25a37_ac986e54",
      "range": {
        "startLine": 164,
        "startChar": 43,
        "endLine": 164,
        "endChar": 51
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c1d4b4a_34fc1345",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-27T11:14:47Z",
      "side": 1,
      "message": "Done,Thank you for the input and it works ðŸ˜Š",
      "parentUuid": "9903d5a2_f2d93b6d",
      "range": {
        "startLine": 164,
        "startChar": 43,
        "endLine": 164,
        "endChar": 51
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ff67705_d8fc8b02",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-21T11:21:03Z",
      "side": 1,
      "message": "Adding new code requires new unit test.",
      "range": {
        "startLine": 161,
        "startChar": 0,
        "endLine": 174,
        "endChar": 5
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99b1f7fd_a5260f34",
        "filename": "src/report_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2022-01-25T19:04:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ff67705_d8fc8b02",
      "range": {
        "startLine": 161,
        "startChar": 0,
        "endLine": 174,
        "endChar": 5
      },
      "revId": "f2d43408145b77d827dfd72b816331687b8e0a97",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}